*ledger.txt* Плагин для типа файла книги.


                                                  *ledger* *ledger-плагин*

Содержание:

        Команды............|вызов главной книги|
        Источник................|бухгалтерская книга-источник|
        Использование..................|бухгалтерская книга-использование|
        Советы....................|бухгалтерская книга-советы|
        Отчеты..............|бухгалтерская книга-отчеты|
        Настройки............|главная книга-настройки|
        Завершение........|книга-завершение|
        Лицензия..............|ledger-лицензия|


==============================================================================
ИСПОЛЬЗОВАНИЕ *книга учета-использование*

Скопируйте каждый файл в соответствующий каталог в каталоге ~/.vim или
установите с помощью Pathogen.

Вы также можете использовать такую модель в каждом файле книги:

    vim:тип файла=главная книга

==============================================================================
СОВЕТЫ *книга-советы*

Советы и полезные команды

* vim-ledger может выполнять синтаксически чувствительное сворачивание, когда вы устанавливаете `foldmethod=синтаксис`
  в файле |modeline| вашей бухгалтерской книги. Таким образом, транзакции могут сократиться
до одной строки.

* Попробуйте заполнить учетную запись (как описано ниже). Если вы используете YouCompleteMe, вы
должны отключить его для файлов книги. Поместите это в свой .vimrc:

        если существует('g:ycm_filetype_blacklist')
          вызов extend(g:ycm_filetype_blacklist, { 'ledger': 1 })
        эндиф

* Вы можете использовать `:make` для проверки синтаксиса. Может быть удобно определить
сопоставление для следующей команды:

	:бесшумное создание | перерисовка! | cwindow

  Рекомендуется установить значение "g:ledger_extra_options" (см. ниже)
  следующим образом:

        пусть g:ledger_extra_options = '--педантичный --явный --получатели чеков'

  чтобы уловить большинство потенциальных проблем в исходном файле.

* Переназначить движение параграфа vim для перемещения по транзакции.

  В vim нажатия клавиш "{" и "}" перемещают курсор вверх и вниз на целые
абзацы. Они могут быть переопределены в файлах главной книги, чтобы вместо этого перемещаться по проводкам
. Добавьте эти строки в файл .vimrc:

        au FileType ledger noremap { ?^\d<CR>
        au FileType ledger noremap } /^\d<CR>

  Определения по умолчанию уже работают в файлах главной книги, которые разделяют
проводки пустыми строками.

* `:вызов книги#transaction_date_set(строка('.'), "вспомогательная")`

  установит сегодняшнюю дату в качестве вспомогательной даты текущей транзакции. Вы
также можете использовать "первичный" или "unshift" вместо "вспомогательный". Когда вы проходите
  "unshift" старая основная дата будет установлена в качестве вспомогательной даты, а сегодняшняя
дата будет установлена в качестве новой основной даты.
  Чтобы использовать другую дату, передайте дату, измеренную в секундах с 1 января 1970 года
  в качестве третьего аргумента.

* `:вызовите ledger#transaction_state_set(строка('.'), '*')`

  устанавливает состояние текущей транзакции в"*". Вы можете использовать это в обычае
  сопоставления.

* `:вызов книги#transaction_state_toggle(строка('.'), ' *?!')`

  будет переключаться между предоставленными состояниями транзакций. Вы можете сопоставить это
, например, с двойным щелчком мыши:

        noremap <silent><буфер> <2-левая мышь>\
        :вызов книги#транзакция_статей_тоггл(строка('.'), ' *?!')<CR>

* `:вызов книги#transaction_post_state_set(строка('.'), '*')`

  похож на ledger#transaction_state_set, но может устанавливать состояние отдельной
записи.

* `:вызов книги транзакций#transaction_post_state_toggle(строка('.'), ' *?!')`

  похож на ledger#transaction_state_toggle, но может переключать состояние
отдельной записи.

* `:LedgerAlign`

  перемещает выражение суммы разноски так, чтобы десятичный разделитель был
выровнен по столбцу, указанному g:ledger_align_at. Если сумма не имеет
десятичной точки, мнимая десятичная точка справа от наименее
значащей цифры будет выровнена. Команда действует в диапазоне, по умолчанию
используется текущая строка.

  Десятичный разделитель можно установить с помощью "g:ledger_decimal_sep". Значение
по умолчанию `g:ledger_decimal_sep` равно `.".

  Ниже приведены рекомендуемые сопоставления.

* `:LedgerAlignBuffer`

  Эта команда выравнивает товар для каждой проводки во всем буфере,
аналогично команде": LedgerAlign". Это отличается от ручного указания
всего буфера в качестве диапазона до": LedgerAlign " или
"ledger#align_commodity ()" путем сохранения и восстановления положения курсора и окна
.

  Из-за проблем с производительностью не рекомендуется вызывать эту команду
на больших буферах.

* `:вызов книги#align_amount_at_cursor()`

  выравнивает сумму под курсором и добавляет/добавляет валюту по умолчанию.
  Валюта по умолчанию может быть установлена с помощью "g:ledger_default_commodity". Будь то
  товар должен быть вставлен до того, как сумма или добавление к ней может быть
настроено с помощью логического флага "g:ledger_commodity_before" (
значение по умолчанию равно 1). Разделитель между товаром и суммой может быть установлен
с помощью "g:ledger_commodity_sep".

  Ниже приведены рекомендуемые сопоставления.

* `:вызов книги#autocomplete_and_align()`

  когда курсор находится на числе или сразу после него, вызывает
  `ledger#align_amount_at_cursor ()", чтобы выровнять его и добавить валюту по умолчанию;
  в противном случае выполняется автозаполнение. Если вы определяете следующие сопоставления в
  затем вы можете выполнить как автозаполнение, так и выравнивание с помощью
клавиши <Tab>.:

        au FileType ledger inoremap <silent> <Tab> \
        <C-r>=ledger#autocomplete_and_align()<CR>
        au FileType ledger vnoremap <silent> <Tab> :LedgerAlign<CR>

  Кроме того, вы можете создать файл". vim/after/ftplugin/ledger.vim".
  содержит следующие определения:

        inoremap <silent> <буфер> <Вкладка> \
        <C-r>=ledger#autocomplete_and_align()<CR>
        vnoremap <silent> <буфер> <Вкладка> :LedgerAlign<CR>

  Теперь вы можете ввести "asset:check<Tab><Space>123.45<Tab>" и автоматически заполнить
имя учетной записи и правильно выровнять "$123.45 " (при условии, что для вашего
товара по умолчанию установлено значение `$"). Или вы можете нажать <Tab> в визуальном режиме
, чтобы выровнять сразу несколько транзакций.

* `:вызов книги#запись()`

  вводит новую транзакцию на основе текста в текущей строке.
  Текст в текущей строке заменяется новой транзакцией.
  Это передний конец "записи в бухгалтерской книге".

==============================================================================
ОТЧЕТЫ *главная книга-отчеты*

* `:Бухгалтерская книга`

  Выполняет произвольную команду книги и отправляет выходные данные в новый буфер.
  Например:

        :Ledger bal ^активы ^liab

  Ошибки отображаются в окне быстрого исправления. Команда предлагает автоматическое заполнение учетной записи и
получателя платежа (нажатием кнопки <Tab>): каждое имя, начинающееся с"@"
, автоматически заполняется в качестве получателя платежа; любое другое имя автоматически заполняется в качестве учетной записи.

  В буфере отчетов или в окне быстрого исправления вы можете нажать <Tab> для переключения
  вернитесь к исходному файлу, и вы можете нажать "q", чтобы закрыть текущее окно.

  Существует три группы выделения, которые используются для окрашивания отчета:

  * `LedgerNumber`

    Это используется для окрашивания неотрицательных чисел.

  * `LedgerNegativeNumber`

    Это используется для окрашивания отрицательных чисел.

  * `LedgerImproperPerc`

    Это используется для окрашивания неправильных процентов.

* `:Баланс`

  Показать ожидающий и очищенный баланс данного счета под статусом
  линия. Например:

	:Проверка баланса:экономия

  Команда предлагает автоматическое заполнение получателя платежа и счета (см.": Бухгалтерская книга"). То
  аргумент учетной записи необязателен: если аргумент не задан, используется первое
имя учетной записи, найденное в текущей строке.

  Для настройки цветов линии можно использовать две группы подсветки:

  * `LedgerCleared`

    Это используется для окрашивания очищенного баланса.

  * `LedgerPending`

    Это используется для окрашивания отложенного баланса.

* `:Регистрация`

  Открывает произвольный отчет о регистре в окне quickfix. Например:

	:Зарегистрируйте продукты -p "в этом месяце"

  Команда предлагает автоматическое заполнение счета и получателя платежа (см. |:Ledger|). Вы
  может использовать стандартные команды quickfix для перехода от записи в отчете регистра
к соответствующему местоположению в исходном файле. Если вы используете графический интерфейс Vim
  или если ваш терминал поддерживает мышь (например, iTerm2 или даже
  Terminal.app в OS X 10.11 или более поздней версии), вы также можете дважды щелкнуть
номер строки в окне quickfix, чтобы перейти к соответствующей записи.

  Настоятельно рекомендуется добавить сопоставления для общих
команд quickfix, таких как": cprev "и": cnext", или использовать неповрежденные команды T. Pope
  плагин.

* :`Примирение`

  Сверка учетной записи. Например:

	:Проверка согласования

  После нажатия клавиши Enter вам будет предложено ввести целевую сумму (используйте
  Синтаксис Vim для чисел, а не формат вашей книги). Например, для
текущего счета целевой суммой может быть остаток вашей последней банковской
выписки. Список неочищенных проводок появится в окне quickfix.
  Текущий баланс счета вместе с разницей между
целевой суммой и очищенным балансом отображается в нижней части экрана.
  Вы можете использовать стандартные команды quickfix для навигации по проводкам. Вы
  может использовать |ledger#transaction_state_set()| для обновления состояния транзакции.
  Каждый раз, когда вы сохраняете файл, баланс и разница с
целевой суммой обновляются в нижней части экрана. Цель, конечно,
состоит в том, чтобы свести такую разницу к нулю. Вы можете нажать " <C-l>", чтобы обновить буфер
согласования. Чтобы завершить согласование учетной записи, просто закройте окно
quickfix.

  Существует группа выделения, чтобы настроить цвет отличия от
целевого:

  * `LedgerTarget`

    Это используется для окрашивания разницы между целевой суммой и
очищенным балансом.

==============================================================================
НАСТРОЙКИ *главная книга-настройки*

Конфигурация

Включите следующие инструкции let где-нибудь в свой файл". vimrc", чтобы изменить
поведение типа файла книги.

* Путь к исполняемому файлу "ledger":

	пусть g:ledger_bin = 'бухгалтерская книга'

